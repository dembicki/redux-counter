{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from \"redux\"; //STORE -> GLOBALIZED STATE\n//ACTION INCREMENT\n\nconst increment = () => {\n  return {\n    type: 'INCREMENT'\n  };\n};\n\nconst decrement = () => {\n  return {\n    type: 'DECREMENT'\n  };\n}; //REDUCER\n\n\nconst counter = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n\n    case \"DECREMENT\":\n      return state - 1;\n  }\n};\n\nlet store = createStore(counter); // display in the console\n\nstore.subscribe(() => console.log(store.getState())); //DISPATCH\n\nstore.dispatch(increment()); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","map":{"version":3,"sources":["/home/damian/learn-redux/src/index.js"],"names":["React","ReactDOM","App","createStore","increment","type","decrement","counter","state","action","store","subscribe","console","log","getState","dispatch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CAIA;AAEA;;AACA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AACrC,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,WAAL;AACE,aAAOG,KAAK,GAAG,CAAf;;AACF,SAAK,WAAL;AACE,aAAOA,KAAK,GAAG,CAAf;AAJJ;AAMD,CAPD;;AASA,IAAIE,KAAK,GAAGP,WAAW,CAACI,OAAD,CAAvB,C,CAEA;;AACAG,KAAK,CAACC,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ,CAAtB,E,CAEA;;AAEAJ,KAAK,CAACK,QAAN,CAAeX,SAAS,EAAxB,E,CAIA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from \"redux\";\n\n\n\n//STORE -> GLOBALIZED STATE\n\n//ACTION INCREMENT\nconst increment = () => {\n  return {\n    type: 'INCREMENT'\n  }\n}\n\nconst decrement = () => {\n  return {\n    type: 'DECREMENT'\n  }\n}\n\n//REDUCER\nconst counter = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n    case \"DECREMENT\":\n      return state - 1;\n  }\n}\n\nlet store = createStore(counter);\n\n// display in the console\nstore.subscribe(() => console.log(store.getState()));\n\n//DISPATCH\n\nstore.dispatch(increment());\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"]},"metadata":{},"sourceType":"module"}